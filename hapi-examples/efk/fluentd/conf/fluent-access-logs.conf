<system>
  workers 1 
</system>
<worker 0>
  <source>
    @type tail
    path /fluentd/log/logs/*/*/*
    path_key file_path
    read_from_head true

    <parse>
     @type regexp
      expression /^(?<client.ip>[^ ]*) (?<remote_host>[^ ]*) (?<remote_user>[^ ]*) \[(?<@timestamp>[^\]]*)\] "(?<request.method>\S+)(?: +(?<request.url>(?:[^\"]|\\.)*?)(?: +\S*)?)?" (?<response.status_code>[^ ]*) (?<response.size>[^ ]*)(?: "(?<referer>(?:[^\"]|\\.)*)" "(?<user.agent>(?:[^\"]|\\.)*)")?$/
      time_format %d/%b/%Y:%H:%M:%S %z
    </parse>

    @label @ACCESS_LOGS 
    tag access.log
  </source>
  <label @ACCESS_LOGS>
    <filter access.log>
      @type record_transformer
      enable_ruby true
      <record>
        @timestamp ${if record.has_key?('@timestamp'); Time.strptime(record["@timestamp"], "%d/%b/%Y:%H:%M:%S %z").strftime("%Y-%m-%dT%H:%M:%S%z"); end;}
        response.status_code ${record['response.status_code'].to_i}
        response.size ${record['response.size'].to_i}
        customer_name ${record['file_path'].match('\/([^\/]+)\/[^\/]+\/[^\/]+\.log$')[1]}
        log_type      ${record['file_path'].match('\/([^\/]+)\/[^\/]+\.log$')[1].split(/[._ !@#$%^&-]/).first.downcase()}
      </record>
    </filter>

    <filter access.log>
      @type geoip
      geoip_lookup_keys client.ip

      backend_library geoip2_c

      <record>
        geoip.continent_name   ${continent.names.en["client.ip"]}
        geoip.country_name     ${country.names.en["client.ip"]}
        geoip.country_iso_code ${country.iso_code["client.ip"]}
        geoip.city_name        ${city.names.en["client.ip"]}
        geoip.region_iso_code  ${registered_country.iso_code["client.ip"]}
        geoip.region_name      ${registered_country.names.en["client.ip"]}
        geoip.location     'POINT (${location.latitude["client.ip"]} ${location.longitude["client.ip"]})'
      </record>
      skip_adding_null_record true
    </filter>

    <match access.log>
      @type copy
      <store>
        @type elasticsearch
        host elasticsearch
        port 9200
        logstash_format true
        logstash_prefix access-log
        logstash_dateformat %Y%m%d
        include_tag_key true
        type_name access_log
        tag_key @log_name
        templates { "access-template": "/fluentd/templates/template.json"}
        template_overwrite true
        flush_interval 2s
      </store>
      <store>
        @type stdout
      </store>
    </match>
  </label>
</worker>
